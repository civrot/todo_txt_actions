#!/usr/bin/env ruby

require 'date'
IMPEDIMENT_TAG = "@impediment"


if ARGV[0] == "usage"
  puts "  Standup Report:"
  puts "    standup"
  puts "      Generates a report of tasks completed \"Yesterday\", and tasks left to do"
  puts "  "

else

  today = Date.today
  todays_completed = []
  impediments = []


  #read DONE file
  done = File.read(ENV['DONE_FILE'])
  done = done.split($/)
  done.reverse!


  # ==============================
  #    generate YESTERDAY's List
  # ==============================

  #define 'yesterday' as the last date on the done file that is not 'today'
  i = 0
  begin
      data = done[i].split("\t")
      yesterday  = Date.strptime(data[1], '%Y-%m-%d')
      i += 1
  end until today != yesterday

  puts "\n========================================"
  puts " Yesterday: #{yesterday}"
  puts "========================================"

  #dump out the list
  done.each { |item|
      data = item.split("\t")
      task_date = Date.strptime(data[1], '%Y-%m-%d')
      #puts task_date
      if task_date == yesterday 
	  puts "+ #{data[3]}"
      elsif task_date == today
	  todays_completed.push(data[3])       
      end
  }


  #read TODO file
  todo = File.read(ENV['TODO_FILE'])
  todo = todo.split($/)
  # ==============================
  #    generate TODAY's List
  # ==============================

  puts "\n========================================"
  puts " Today: #{Date.today}"
  puts "========================================"

  #dumpe TODAY's COMPELTED
  todays_completed.each { |task|
      puts "+ #{task}"
  }

  #dump  TODAY's List
  todo.each { |task| 
      if task.include?(IMPEDIMENT_TAG)
	  impediments.push(task)
      else
	  puts "- #{task}"
      end
  }
  #generate IMPEDIMENT's List
  if impediments.length > 0
      puts "\n========================================"
      puts " Impediments: #{Date.today}"
      puts "========================================"

      impediments.each { |task|
	  puts"i #{task}"
      }
  end

  puts "\n"

end

